Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55__Changes_.xml	(revision 6d6385d3d29006557a9f59685468f5127266172a)
+++ /dev/null	(revision 6d6385d3d29006557a9f59685468f5127266172a)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_31_01_2024_20_55_[Changes]" date="1706723757693" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 31.01.2024 20:55 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2b1be840-8156-4db4-9b38-13762a90f676\" name=\"Changes\" comment=\"Commit 4\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/forms.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/forms.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/models.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/models.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/templates/social/base.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/templates/social/base.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/templates/social/index.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/templates/social/index.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/templates/social/login.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/templates/social/login.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/templates/social/profile.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/templates/social/profile.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/templates/social/register.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/templates/social/register.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/urls.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/urls.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/social/views.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/social/views.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/network/static/css/style.css\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/network/static/css/style.css\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/network/social/views.py\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2bgT76K7zSNR2xO4G3Bx8bM1xaZ\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/User/PycharmProjects/DjangoSocialNetwork/network/static&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\User\\PycharmProjects\\DjangoSocialNetwork\\network\\static\" />\r\n      <recent name=\"C:\\Users\\User\\PycharmProjects\\DjangoSocialNetwork\\network\\static\\css\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\User\\PycharmProjects\\DjangoSocialNetwork\\network\\static\\js\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2b1be840-8156-4db4-9b38-13762a90f676\" name=\"Changes\" comment=\"\" />\r\n      <created>1706635551240</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1706635551240</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Commit from MAster\">\r\n      <created>1706725291540</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706725291540</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Commit from MAster\">\r\n      <created>1706731702575</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706731702575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Commit 4\">\r\n      <created>1706731941397</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706731941397</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Commit from lzka\" />\r\n    <MESSAGE value=\"Commit from MAster\" />\r\n    <MESSAGE value=\"Commit 4\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Commit 4\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 6d6385d3d29006557a9f59685468f5127266172a)
+++ b/.idea/workspace.xml	(date 1707337345057)
@@ -5,17 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2b1be840-8156-4db4-9b38-13762a90f676" name="Changes" comment="Commit 4">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/forms.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/models.py" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/models.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/templates/social/base.html" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/templates/social/base.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/templates/social/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/templates/social/index.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/templates/social/login.html" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/templates/social/login.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/templates/social/profile.html" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/templates/social/profile.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/templates/social/register.html" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/templates/social/register.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/social/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_20_55__Changes_.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_22_02__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_31_01_2024_22_02__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_31_01_2024_23_01__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_31_01_2024_23_01__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/network/social/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/network/social/views.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/network/static/css/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/network/static/css/style.css" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: network/social/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import messages\r\nfrom django.contrib.auth import authenticate, login, logout\r\nfrom django.contrib.auth.views import LoginView\r\nfrom django.db import IntegrityError\r\nfrom django.http import HttpResponse, HttpResponseRedirect, JsonResponse\r\nfrom django.shortcuts import render, redirect, get_object_or_404\r\nfrom django.urls import reverse, reverse_lazy\r\nfrom django.contrib.auth.decorators import login_required\r\nfrom django.views.decorators.csrf import csrf_exempt\r\nfrom django.core.paginator import Paginator\r\nimport json\r\nfrom .forms import *\r\nfrom django.views.generic import CreateView, UpdateView, DetailView\r\nfrom django.views.decorators.csrf import ensure_csrf_cookie\r\n\r\nfrom .models import *\r\n\r\n\r\n\r\ndef index(request):\r\n    if not request.user.is_authenticated:\r\n        return redirect('login')\r\n    else:\r\n        followers = Follower.objects.filter(user = request.user)\r\n        Tequest = Request.objects.filter(user = request.user)\r\n        if not followers.exists():\r\n            Follower.objects.create(user = request.user)\r\n            follower = followers.first()\r\n            user_followings = follower.followings.all()\r\n        else:\r\n            follower = followers.first()\r\n            user_followings = follower.followings.all()\r\n        if not Tequest.exists():\r\n            Request.objects.create(user = request.user)\r\n            teuqest = Tequest.first()\r\n            request_user_list = teuqest.requests.all()\r\n        else:\r\n            teuqest = Tequest.first()\r\n            request_user_list = teuqest.requests.all()\r\n\r\n        user = request.user\r\n        posts = Post.objects.all()\r\n        my_list = []\r\n        you_might_know = User.objects.exclude(id__in = user_followings)\r\n        context = {\"posts\": posts, 'user': user, 'user_followings': user_followings,\r\n                   'request_user_list': request_user_list, 'you_might_know': you_might_know}\r\n        return render(request, 'social/index.html', context=context)\r\n\r\n\r\n\r\nclass RegisterView(CreateView):\r\n    success_url = reverse_lazy('login')\r\n    model = User\r\n    form_class = UserRegistretion\r\n    template_name =  'social/register.html'\r\n\r\n    def get_context_data(self,*, object_list = None , **kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        context['title'] = 'Rgistretion'\r\n        return context\r\n\r\n\r\n\r\n\r\nclass UserLogin(LoginView):\r\n    form_class = UserLogin\r\n    template_name = 'social/login.html'\r\n    model = User\r\n\r\n    def get_context_data(self,*, object_list  = None,**kwargs):\r\n        context = super().get_context_data(**kwargs)\r\n        context['title'] =  'login'\r\n        return context\r\n\r\n\r\n\r\nclass UserProfile(DetailView):\r\n    model = User\r\n    context_object_name = 'user'\r\n    template_name = 'social/profile.html'\r\n\r\n    def get_context_data(self,*, object_list = None,  **kwargs):\r\n        context= super().get_context_data(**kwargs)\r\n        context['title'] = f'Profile {self.object}'\r\n        return context\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef Subscribe(request, pk):\r\n    user = request.user\r\n    user_get = User.objects.get(id = pk)\r\n    follower = Follower.objects.get(user = user)\r\n    follower.followings.add(user_get)\r\n    return HttpResponseRedirect(request.META[\"HTTP_REFERER\"])\r\n\r\n\r\n\r\n\r\ndef UnSubscribe(request, pk):\r\n    user = request.user\r\n    user_get = User.objects.get(id = pk)\r\n    follower = Follower.objects.get(user= user)\r\n    follower.followings.remove(user_get)\r\n    return HttpResponseRedirect(request.META[\"HTTP_REFERER\"])\r\n\r\n\r\n\r\n\r\ndef AddLike(request):\r\n    if request.POST.get('action') == 'post':\r\n        checker = None\r\n        post_id  = int(request.POST.get('post_id'))\r\n        post = get_object_or_404(Post , id = post_id)\r\n        if post.likers.filter(id = request.user.id).exists():\r\n            post.likers.remove(request.user)\r\n            post.save()\r\n            checker = 0\r\n\r\n        else:\r\n            post.likers.add(request.user)\r\n            post.save()\r\n            checker = 1\r\n        return JsonResponse({'total_likes': post.total_likes, 'check': checker,})\r\n    return HttpResponse('Error acces ')\r\n\r\n\r\n\r\n\r\n\r\ndef Subscribe(request):\r\n    if request.POST.get('action') == 'post':\r\n        flag = None\r\n        creater_id = int(request.POST.get('creater_id'))\r\n        creater = get_object_or_404(User, id = creater_id)\r\n        user = Follower.objects.get(user = request.user)\r\n        if creater in user.followings.all():\r\n            user.followings.remove(creater)\r\n            user.save()\r\n            flag = 1\r\n        else:\r\n            user.followings.add(creater)\r\n            user.save()\r\n            flag = 0\r\n        if flag == 1:\r\n            info  = 'Follow'\r\n        else:\r\n            info = 'Unfollow'\r\n\r\n        return JsonResponse({\"info\": info,})\r\n    return HttpResponse('Error acces ')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef Remove_like(request, pk):\r\n    post = Post.objects.get(id = pk)\r\n    post.likers.remove(request.user)\r\n    return HttpResponseRedirect(request.META[\"HTTP_REFERER\"])\r\n\r\n\r\n\r\n\r\ndef SendRequest(request, pk):\r\n    user = request.user\r\n    user_request_to = User.objects.get(id = pk)\r\n    Tequest = Request.objects.get(user = user)\r\n    Tequest.requests.add(user_request_to)\r\n    return HttpResponseRedirect(request.META[\"HTTP_REFERER\"])\r\n\r\n\r\n\r\n\r\ndef ConfirmRequest(request, pk):\r\n    user_from = User.objects.get(id = pk)\r\n    Tequest = Request.objects.get(user = user_from)\r\n    Tequest.requests.remove(request.user)\r\n    follow = Follower.objects.get(user = user_from)\r\n    follow.followings.add(request.user)\r\n    return HttpResponseRedirect(request.META[\"HTTP_REFERER\"])\r\n\r\n\r\n\r\n\r\ndef Followings(request):\r\n    if request.user:\r\n        follower = Follower.objects.get(user = request.user)\r\n    users_followings = follower.followings.all()\r\n    posts = Post.objects.filter(creater__id__in = users_followings)\r\n    context = {'posts': posts}\r\n    return render(request, 'social/index.html', context = context)\r\n\r\n\r\n\r\n\r\ndef DeletePost(request):\r\n    pk = request.GET.get('pk')\r\n    post = Post.objects.get(id = pk)\r\n    print(post)\r\n    post.delete()\r\n    return JsonResponse({'deleted': True})\r\n\r\n\r\n\r\n\r\ndef Save_post(request):\r\n    flag = None\r\n    user = request.user\r\n    post_id = int(request.POST.get('pk'))\r\n    post = Post.objects.get(id = post_id)\r\n    if user in post.savers.all():\r\n        post.savers.remove(request.user)\r\n        post.save()\r\n        flag = 0\r\n    else:\r\n        post.savers.add(request.user)\r\n        post.save()\r\n        flag = 1\r\n\r\n    return JsonResponse({'flag': flag })\r\n\r\n\r\n\r\n\r\n\r\ndef Post_create_contex(request):\r\n    Post.objects.create(creater = request.user, context_text = request.POST.get('text'))\r\n    return HttpResponseRedirect(request.META['HTTP_REFERER'])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndef Add_comment(request, pk):\r\n    Comment.objects.create(post = Post.objects.get(id = pk), commenter = request.user,comment_content = request.POST.get('comment'))\r\n    return HttpResponseRedirect(request.META['HTTP_REFERER'])\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/network/social/views.py b/network/social/views.py
--- a/network/social/views.py	(revision 6d6385d3d29006557a9f59685468f5127266172a)
+++ b/network/social/views.py	(date 1707336412398)
@@ -240,11 +240,6 @@
 
 
 
-
-
-
-
-
 def Add_comment(request, pk):
     Comment.objects.create(post = Post.objects.get(id = pk), commenter = request.user,comment_content = request.POST.get('comment'))
     return HttpResponseRedirect(request.META['HTTP_REFERER'])
